{"version":3,"sources":["components/Header/Header.jsx","components/ContactProject/DetailList.jsx","components/ContactProject/DeletedDetailList.jsx","utils/localstorage.js","components/ContactProject/AddDetail/AddDetail.jsx","components/Formik/FormikValidationError.jsx","components/Formik/schema.js","components/Formik/BookingDetail/BookingDetail.jsx","store/todos/todos-actionType.js","components/Todo/TodoItem/TodoItem.jsx","store/todos/todos-action.js","components/Todo/Todos.jsx","App.js","store/todos/todos-reducers.js","store/root-reducer.js","store/index.js","index.js"],"names":["navLinks","path","name","Header","className","map","link","activeClassName","to","DetailList","props","addedListData","onHandleEdit","onHandleDelete","scope","length","data","index","email","phoneno","style","marginRight","cursor","title","onClick","xmlns","width","height","fill","viewBox","d","fillRule","colSpan","DeletedDetailList","deletedListData","onHandleRestore","getStorageData","key","JSON","parse","localStorage","getItem","setStorageData","values","setItem","stringify","storageKey","AddDetail","handleSubmit","event","preventDefault","state","id","editState","editedListData","filter","listData","setState","prevState","uuidv4","handleChange","target","value","validations","touched","invalid","handleEdit","handleDelete","newListData","handleClear","handleRestore","newDeletedListData","required","validationMessage","this","onSubmit","htmlFor","type","onChange","onFocus","disabled","Component","FormikValidationError","errors","initialValues","firstname","lastname","gender","mobileno","country","city","document","twowayactive","returndate","returnfrom","returnto","validationSchema","yup","shape","typeError","test","includes","size","when","is","val","then","otherwise","nullable","BookingDetail","useFormik","schema","enableReinitialize","setSubmitting","reqData","setTimeout","alert","handleBlur","setFieldValue","onBlur","e","files","checked","addTodo","markCompleteTodo","deleteTodo","TodoItem","getStyle","background","padding","borderBottom","getTextDecoration","completed","textDecoration","todos","todo","btnStyle","mapDispatchToProps","actionTypes","payload","connector","connect","color","border","borderRadius","outline","Todos","newTodo","placeholder","React","Home","App","component","initialState","todosReducer","action","appReducer","combineReducers","composeEnhancer","compose","store","createStore","rootReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.31e26d96.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navLinks = [\r\n  {\r\n    path: '/assignment-1',\r\n    name: 'Mini Contact Project',\r\n  },\r\n  {\r\n    path: '/assignment-2',\r\n    name: 'Booking Detail',\r\n  },\r\n  {\r\n    path: '/todo-list',\r\n    name: 'To-Do',\r\n  },\r\n];\r\n\r\nconst Header = () => {\r\n  return (\r\n    <ul className='nav nav-tabs mt-4'>\r\n      {navLinks.map((link) => (\r\n        <li className='nav-item' key={link.name}>\r\n          <NavLink activeClassName='active' className='nav-link' to={link.path}>\r\n            {link.name}\r\n          </NavLink>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst DetailList = (props) => {\r\n  const { addedListData, onHandleEdit, onHandleDelete } = props;\r\n  return (\r\n    <div className='mt-2'>\r\n      <h2>Details List</h2>\r\n      <table className='table table-striped'>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col'>#</th>\r\n            <th scope='col'>Name</th>\r\n            <th scope='col'>Email</th>\r\n            <th scope='col'>Phone No.</th>\r\n            <th scope='col'>Actions</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {addedListData.length ? (\r\n            addedListData.map((data, index) => (\r\n              <tr key={index}>\r\n                <th scope='row'>{index + 1}</th>\r\n                <td>{data.name}</td>\r\n                <td>{data.email}</td>\r\n                <td>{data.phoneno}</td>\r\n                <td>\r\n                  <span\r\n                    style={{ marginRight: '15px', cursor: 'pointer' }}\r\n                    title='Edit'\r\n                    onClick={() => onHandleEdit(data)}\r\n                  >\r\n                    <svg\r\n                      xmlns='http://www.w3.org/2000/svg'\r\n                      width='16'\r\n                      height='16'\r\n                      fill='currentColor'\r\n                      className='bi bi-pencil-fill'\r\n                      viewBox='0 0 16 16'\r\n                    >\r\n                      <path d='M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z' />\r\n                    </svg>\r\n                  </span>\r\n\r\n                  <span\r\n                    style={{ cursor: 'pointer' }}\r\n                    title='Delete'\r\n                    onClick={() => onHandleDelete(data)}\r\n                  >\r\n                    <svg\r\n                      xmlns='http://www.w3.org/2000/svg'\r\n                      width='16'\r\n                      height='16'\r\n                      fill='red'\r\n                      className='bi bi-trash'\r\n                      viewBox='0 0 16 16'\r\n                    >\r\n                      <path d='M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z' />\r\n                      <path\r\n                        fillRule='evenodd'\r\n                        d='M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z'\r\n                      />\r\n                    </svg>\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan='5' className='text-center'>\r\n                No data to display\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailList;\r\n","import React from 'react';\r\n\r\nconst DeletedDetailList = (props) => {\r\n  const { deletedListData, onHandleRestore } = props;\r\n  return (\r\n    <div className='mt-4'>\r\n      <h2>Deleted Data List</h2>\r\n      <table className='table table-striped'>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col'>#</th>\r\n            <th scope='col'>Name</th>\r\n            <th scope='col'>Email</th>\r\n            <th scope='col'>Phone No.</th>\r\n            <th scope='col'>Actions</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {deletedListData.length ? (\r\n            deletedListData.map((data, index) => (\r\n              <tr key={index}>\r\n                <th scope='row'>{index + 1}</th>\r\n                <td>{data.name}</td>\r\n                <td>{data.email}</td>\r\n                <td>{data.phoneno}</td>\r\n                <td>\r\n                  <span\r\n                    style={{ marginRight: '15px', cursor: 'pointer' }}\r\n                    title='Restore'\r\n                    onClick={() => onHandleRestore(data)}\r\n                  >\r\n                    <svg\r\n                      xmlns='http://www.w3.org/2000/svg'\r\n                      width='16'\r\n                      height='16'\r\n                      fill='currentColor'\r\n                      className='bi bi-plus-square'\r\n                      viewBox='0 0 16 16'\r\n                    >\r\n                      <path d='M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z' />\r\n                      <path d='M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z' />\r\n                    </svg>\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan='5' className='text-center'>\r\n                No data to display\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeletedDetailList;\r\n","export const getStorageData = (key) => {\r\n  return JSON.parse(localStorage.getItem(key));\r\n};\r\n\r\nexport const setStorageData = (key, values) => {\r\n  localStorage.setItem(key, JSON.stringify(values));\r\n};\r\n","import React, { Component } from 'react';\r\nimport DetailList from 'components/ContactProject/DetailList';\r\nimport DeletedDetailList from 'components/ContactProject/DeletedDetailList';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { setStorageData, getStorageData } from 'utils/localstorage';\r\n\r\nconst storageKey = {\r\n  addedListData: 'addedListData',\r\n  deletedListData: 'deletedListData',\r\n};\r\n\r\nclass AddDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      values: {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        phoneno: '',\r\n      },\r\n      validations: {\r\n        name: {\r\n          required: true,\r\n          touched: false,\r\n          invalid: true,\r\n          validationMessage: 'Name is required',\r\n        },\r\n        email: {\r\n          required: true,\r\n          touched: false,\r\n          invalid: true,\r\n          validationMessage: 'Email is required',\r\n        },\r\n        phoneno: {\r\n          required: true,\r\n          touched: false,\r\n          invalid: true,\r\n          validationMessage: 'Phone No. is required',\r\n        },\r\n      },\r\n      addedListData: [],\r\n      deletedListData: [],\r\n      editState: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (getStorageData(storageKey.addedListData)) {\r\n      const addedListData = getStorageData(storageKey.addedListData);\r\n      this.setState({\r\n        addedListData,\r\n      });\r\n    }\r\n\r\n    if (getStorageData(storageKey.deletedListData)) {\r\n      const deletedListData = getStorageData(storageKey.deletedListData);\r\n      this.setState({\r\n        deletedListData,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      values: { id, name, email, phoneno },\r\n      editState,\r\n      addedListData,\r\n    } = this.state;\r\n    if (name && email && phoneno) {\r\n      if (editState) {\r\n        const editedListData = addedListData.filter(\r\n          (listData) => listData.id !== id\r\n        );\r\n        this.setState(\r\n          (prevState) => ({\r\n            ...prevState,\r\n            addedListData: [...editedListData, { id, name, email, phoneno }],\r\n            values: { name: '', email: '', phoneno: '' },\r\n            editState: false,\r\n          }),\r\n          () =>\r\n            setStorageData(storageKey.addedListData, this.state.addedListData)\r\n        );\r\n      } else {\r\n        this.setState(\r\n          (prevState) => ({\r\n            ...prevState,\r\n            addedListData: [\r\n              ...prevState.addedListData,\r\n              { id: uuidv4(), name, email, phoneno },\r\n            ],\r\n            values: { name: '', email: '', phoneno: '' },\r\n          }),\r\n          () =>\r\n            setStorageData(storageKey.addedListData, this.state.addedListData)\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState(\r\n      (prevState) => ({\r\n        ...prevState,\r\n        values: {\r\n          ...prevState.values,\r\n          [event.target.name]: event.target.value,\r\n        },\r\n        validations: {\r\n          ...prevState.validations,\r\n          [event.target.name]: {\r\n            ...prevState.validations[event.target.name],\r\n            touched: true,\r\n          },\r\n        },\r\n      }),\r\n      () => {\r\n        this.setState((prevState) => ({\r\n          ...prevState,\r\n          values: {\r\n            ...prevState.values,\r\n            [event.target.name]: event.target.value,\r\n          },\r\n          validations: {\r\n            ...prevState.validations,\r\n            [event.target.name]: {\r\n              ...prevState.validations[event.target.name],\r\n              invalid: this.state.values[event.target.name].length > 0 || false,\r\n            },\r\n          },\r\n        }));\r\n      }\r\n    );\r\n  };\r\n\r\n  handleEdit = (listData) => {\r\n    const { id, name, email, phoneno } = listData;\r\n    this.setState({\r\n      editState: true,\r\n      values: { name, email, phoneno, id },\r\n    });\r\n  };\r\n\r\n  handleDelete = (listData) => {\r\n    const { addedListData } = this.state;\r\n    const newListData = addedListData.filter((data) => data.id !== listData.id);\r\n    this.setState(\r\n      (prevState) => ({\r\n        ...prevState,\r\n        addedListData: newListData,\r\n        deletedListData: [...prevState.deletedListData, listData],\r\n      }),\r\n      () => {\r\n        setStorageData(storageKey.addedListData, this.state.addedListData);\r\n        setStorageData(storageKey.deletedListData, this.state.deletedListData);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleClear = () => {\r\n    this.setState({\r\n      values: {\r\n        name: '',\r\n        email: '',\r\n        phoneno: '',\r\n      },\r\n      editState: false,\r\n    });\r\n  };\r\n\r\n  handleRestore = (listData) => {\r\n    const newDeletedListData = this.state.deletedListData.filter(\r\n      (data) => data.id !== listData.id\r\n    );\r\n    this.setState(\r\n      (prevState) => ({\r\n        ...prevState,\r\n        addedListData: [...prevState.addedListData, listData],\r\n        deletedListData: newDeletedListData,\r\n      }),\r\n      () => {\r\n        setStorageData(storageKey.addedListData, this.state.addedListData);\r\n        setStorageData(storageKey.deletedListData, this.state.deletedListData);\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      values,\r\n      validations: { name, email, phoneno },\r\n      addedListData,\r\n      deletedListData,\r\n      editState,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <main>\r\n          <div className='py-5 text-center'>\r\n            <h2>Add Contact Details</h2>\r\n          </div>\r\n          <div className='row g-3'>\r\n            <div className='col'>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className='row g-3'>\r\n                  <div className='col-12 mb-2'>\r\n                    <div className='row'>\r\n                      <div className='col-lg-4'>\r\n                        <label htmlFor='name' className='form-label'>\r\n                          Name\r\n                        </label>\r\n                        <input\r\n                          type='text'\r\n                          id='name'\r\n                          name='name'\r\n                          className='form-control'\r\n                          value={values.name}\r\n                          onChange={this.handleChange}\r\n                          onFocus={this.handleChange}\r\n                        />\r\n                        {name.touched && name.required && !name.invalid && (\r\n                          <div className='validation'>\r\n                            {name.validationMessage}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div className='col-lg-4'>\r\n                        <label htmlFor='email' className='form-label'>\r\n                          Email\r\n                        </label>\r\n                        <input\r\n                          type='email'\r\n                          id='email'\r\n                          name='email'\r\n                          className='form-control'\r\n                          value={values.email}\r\n                          onChange={this.handleChange}\r\n                          onFocus={this.handleChange}\r\n                        />\r\n                        {email.touched && email.required && !email.invalid && (\r\n                          <div className='validation'>\r\n                            {email.validationMessage}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n\r\n                      <div className='col-lg-4'>\r\n                        <label htmlFor='phoneno' className='form-label'>\r\n                          Phone No.\r\n                        </label>\r\n                        <input\r\n                          type='text'\r\n                          id='phoneno'\r\n                          name='phoneno'\r\n                          className='form-control'\r\n                          value={values.phoneno}\r\n                          onChange={this.handleChange}\r\n                          onFocus={this.handleChange}\r\n                        />\r\n                        {phoneno.touched &&\r\n                          phoneno.required &&\r\n                          !phoneno.invalid && (\r\n                            <div className='validation'>\r\n                              {phoneno.validationMessage}\r\n                            </div>\r\n                          )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='col-12'>\r\n                    <div className='d-flex justify-content-end mt-4'>\r\n                      {editState && (\r\n                        <button\r\n                          className='btn btn-secondary mr-2'\r\n                          onClick={this.handleClear}\r\n                          type='button'\r\n                        >\r\n                          Clear\r\n                        </button>\r\n                      )}\r\n                      {\r\n                        <button\r\n                          type='submit'\r\n                          className='btn btn-primary text-white'\r\n                          disabled={\r\n                            !values.name || !values.phoneno || !values.email\r\n                          }\r\n                        >\r\n                          {editState ? 'Update' : 'Add'}\r\n                        </button>\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </main>\r\n\r\n        {/*Detail List */}\r\n        <DetailList\r\n          addedListData={addedListData}\r\n          onHandleEdit={this.handleEdit}\r\n          onHandleDelete={this.handleDelete}\r\n        />\r\n\r\n        {/* Deleted List */}\r\n        <DeletedDetailList\r\n          deletedListData={deletedListData}\r\n          onHandleRestore={this.handleRestore}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddDetail;\r\n","import React from 'react';\r\n\r\nexport function FormikValidationError(props) {\r\n  const { name, touched, errors } = props;\r\n\r\n  return touched[name] && !!errors[name] ? (\r\n    <div className='validation'> {errors[name] ? errors[name] : ''}</div>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n","import * as yup from 'yup';\r\n\r\nconst FILE_SIZE = 1000000;\r\n\r\nconst initialValues = {\r\n  firstname: '',\r\n  lastname: '',\r\n  gender: '',\r\n  mobileno: '',\r\n  country: '',\r\n  city: '',\r\n  document: '',\r\n  twowayactive: '',\r\n  returndate: '',\r\n  returnfrom: '',\r\n  returnto: '',\r\n};\r\n\r\nconst validationSchema = yup.object().shape({\r\n  firstname: yup.string().required('First Name is required'),\r\n  lastname: yup.string().required('Last Name is required'),\r\n  gender: yup.string().required('Gender is required'),\r\n  mobileno: yup\r\n    .number()\r\n    .typeError('This field should be number')\r\n    .required('Phone Number is required'),\r\n  country: yup.string().required('Country Name is required'),\r\n  city: yup.string().required('City Name is required'),\r\n  document: yup\r\n    .mixed()\r\n    .required('Document is required')\r\n    .test(\r\n      'FILE_FORMAT',\r\n      'Document should be in jpg, png or pdf format',\r\n      (value) => {\r\n        return value\r\n          ? [\r\n              'application/pdf',\r\n              'image/jpg',\r\n              'image/jpeg',\r\n              'image/png',\r\n            ].includes(value.type)\r\n          : true;\r\n      }\r\n    )\r\n    .test('FILE_SIZE', 'Document should be less than 1 MB', (value) => {\r\n      return value ? value.size <= FILE_SIZE : true;\r\n    }),\r\n  twowayactive: yup.string().required('Yes or no is required'),\r\n  returndate: yup.string().when('twowayactive', {\r\n    is: (val) => (val === 'yes' ? true : false),\r\n    then: yup.string().required('Return Date is required'),\r\n    otherwise: yup.string().nullable(),\r\n  }),\r\n  returnfrom: yup.string().when('twowayactive', {\r\n    is: (val) => (val === 'yes' ? true : false),\r\n    then: yup.string().required('Return From is required'),\r\n    otherwise: yup.string().nullable(),\r\n  }),\r\n  returnto: yup.string().when('twowayactive', {\r\n    is: (val) => (val === 'yes' ? true : false),\r\n    then: yup.string().required('Return To is required'),\r\n    otherwise: yup.string().nullable(),\r\n  }),\r\n});\r\n\r\nexport { initialValues, validationSchema };\r\n","import React from 'react';\r\nimport { FormikValidationError } from 'components/Formik/FormikValidationError';\r\nimport { useFormik } from 'formik';\r\nimport * as schema from '../schema';\r\n\r\nconst BookingDetail = () => {\r\n  const {\r\n    values,\r\n    errors,\r\n    touched,\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    setFieldValue,\r\n  } = useFormik({\r\n    initialValues: schema.initialValues,\r\n    validationSchema: schema.validationSchema,\r\n    enableReinitialize: true,\r\n    onSubmit: (values, { setSubmitting }) => {\r\n      const reqData = { ...values };\r\n      if (values.twowayactive === 'no') {\r\n        reqData.returndate = '';\r\n        reqData.returnfrom = '';\r\n        reqData.returnto = '';\r\n      }\r\n      setTimeout(() => {\r\n        alert(JSON.stringify(reqData, null, 2));\r\n        setSubmitting(false);\r\n      }, 500);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className='py-5 text-center'>\r\n        <h2>Add Booking Details</h2>\r\n      </div>\r\n\r\n      <div className='row g-3'>\r\n        <div className='col'>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='row g-3'>\r\n              <div className='col-12 mb-2'>\r\n                <div className='row'>\r\n                  <div className='col-lg-3 mb-3'>\r\n                    <label htmlFor='firstname' className='form-label'>\r\n                      First Name\r\n                    </label>\r\n                    <input\r\n                      type='text'\r\n                      id='firstname'\r\n                      name='firstname'\r\n                      className='form-control'\r\n                      value={values.name}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name='firstname'\r\n                      touched={touched}\r\n                      errors={errors}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='col-lg-3 mb-3'>\r\n                    <label htmlFor='lastname' className='form-label'>\r\n                      Last Name\r\n                    </label>\r\n                    <input\r\n                      type='text'\r\n                      id='lastname'\r\n                      name='lastname'\r\n                      className='form-control'\r\n                      value={values.name}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                    <FormikValidationError\r\n                      name='lastname'\r\n                      touched={touched}\r\n                      errors={errors}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='col-lg-3 mb-3'>\r\n                    <label htmlFor='gender' className='form-label'>\r\n                      Gender\r\n                    </label>\r\n                    <select\r\n                      name='gender'\r\n                      id='gender'\r\n                      onChange={handleChange}\r\n                      value={values.gender}\r\n                      onBlur={handleBlur}\r\n                      className='form-control'\r\n                    >\r\n                      <option value=''>Select Gender</option>\r\n                      <option value='male'>Male</option>\r\n                      <option value='female'>Female</option>\r\n                      <option value='others'>Others</option>\r\n                    </select>\r\n\r\n                    <FormikValidationError\r\n                      name='gender'\r\n                      touched={touched}\r\n                      errors={errors}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='col-lg-3 mb-3'>\r\n                    <label htmlFor='mobileno' className='form-label'>\r\n                      Mobile No.\r\n                    </label>\r\n                    <input\r\n                      type='text'\r\n                      id='mobileno'\r\n                      name='mobileno'\r\n                      className='form-control'\r\n                      value={values.mobileno}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <FormikValidationError\r\n                      name='mobileno'\r\n                      touched={touched}\r\n                      errors={errors}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='col-lg-3 mb-3'>\r\n                    <label htmlFor='country' className='form-label'>\r\n                      Country\r\n                    </label>\r\n                    <input\r\n                      type='text'\r\n                      id='country'\r\n                      name='country'\r\n                      className='form-control'\r\n                      value={values.country}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <FormikValidationError\r\n                      name='country'\r\n                      touched={touched}\r\n                      errors={errors}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='col-lg-3 mb-3'>\r\n                    <label htmlFor='city' className='form-label'>\r\n                      City\r\n                    </label>\r\n                    <input\r\n                      type='text'\r\n                      id='city'\r\n                      name='city'\r\n                      className='form-control'\r\n                      value={values.city}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <FormikValidationError\r\n                      name='city'\r\n                      touched={touched}\r\n                      errors={errors}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='col-lg-3 mb-3'>\r\n                    <label htmlFor='document' className='form-label'>\r\n                      Document\r\n                    </label>\r\n                    <input\r\n                      type='file'\r\n                      id='document'\r\n                      name='document'\r\n                      className='form-control'\r\n                      onChange={(e) => {\r\n                        touched['document'] = true;\r\n                        if (e.target.files.length) {\r\n                          setFieldValue('document', e.target?.files[0]);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <FormikValidationError\r\n                      name='document'\r\n                      touched={touched}\r\n                      errors={errors}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='col-lg-3 mb-3'>\r\n                    <label htmlFor='' className='form-label'>\r\n                      Two Way Active\r\n                    </label>\r\n                    <div>\r\n                      <div className='form-check form-check-inline'>\r\n                        <input\r\n                          type='radio'\r\n                          name='twowayactive'\r\n                          id='yes'\r\n                          className='form-check-input'\r\n                          checked={values.twowayactive === 'yes'}\r\n                          value='yes'\r\n                          onChange={handleChange}\r\n                        />\r\n                        <label className='form-check-label' htmlFor='yes'>\r\n                          Yes\r\n                        </label>\r\n                      </div>\r\n\r\n                      <div className='form-check form-check-inline'>\r\n                        <input\r\n                          type='radio'\r\n                          name='twowayactive'\r\n                          id='no'\r\n                          className='form-check-input'\r\n                          checked={values.twowayactive === 'no'}\r\n                          value='no'\r\n                          onChange={handleChange}\r\n                        />\r\n                        <label className='form-check-label' htmlFor='no'>\r\n                          No\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <FormikValidationError\r\n                      name='twowayactive'\r\n                      touched={touched}\r\n                      errors={errors}\r\n                    />\r\n                  </div>\r\n\r\n                  {values.twowayactive === 'yes' && (\r\n                    <>\r\n                      <div className='col-lg-3 mb-3'>\r\n                        <label htmlFor='returndate' className='form-label'>\r\n                          Return Date\r\n                        </label>\r\n                        <input\r\n                          type='date'\r\n                          id='returndate'\r\n                          name='returndate'\r\n                          className='form-control'\r\n                          value={values.returndate}\r\n                          onChange={handleChange}\r\n                        />\r\n                        <FormikValidationError\r\n                          name='returndate'\r\n                          touched={touched}\r\n                          errors={errors}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className='col-lg-3 mb-3'>\r\n                        <label htmlFor='returnfrom' className='form-label'>\r\n                          Return From\r\n                        </label>\r\n                        <input\r\n                          type='date'\r\n                          id='returnfrom'\r\n                          name='returnfrom'\r\n                          className='form-control'\r\n                          value={values.returnfrom}\r\n                          onChange={handleChange}\r\n                        />\r\n                        <FormikValidationError\r\n                          name='returnfrom'\r\n                          touched={touched}\r\n                          errors={errors}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className='col-lg-3 mb-3'>\r\n                        <label htmlFor='returnto' className='form-label'>\r\n                          Return To\r\n                        </label>\r\n                        <input\r\n                          type='date'\r\n                          id='returnto'\r\n                          name='returnto'\r\n                          className='form-control'\r\n                          value={values.returnto}\r\n                          onChange={handleChange}\r\n                        />\r\n                        <FormikValidationError\r\n                          name='returnto'\r\n                          touched={touched}\r\n                          errors={errors}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className='col-12'>\r\n                <div className='d-flex justify-content-end mt-4'>\r\n                  {\r\n                    <button\r\n                      type='submit'\r\n                      className='btn btn-primary text-white'\r\n                    >\r\n                      Submit\r\n                    </button>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingDetail;\r\n","export const addTodo = 'ADD_TODO';\r\nexport const markCompleteTodo = 'MARK_COMPLETE_TODO';\r\nexport const deleteTodo = 'DELETE_TODO';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { markCompleteTodo, deleteTodo } from 'store/todos/todos-action';\r\n\r\nclass TodoItem extends Component {\r\n  getStyle = () => {\r\n    return {\r\n      background: '#f4f4f4',\r\n      padding: '10px',\r\n      borderBottom: '1px #ccc dotted',\r\n    };\r\n  };\r\n\r\n  getTextDecoration = (completed) => {\r\n    return {\r\n      textDecoration: completed ? 'line-through' : 'none',\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { todos } = this.props;\r\n\r\n    return todos?.map((todo) => (\r\n      <div style={this.getStyle()} className='row'>\r\n        <div className='col-10'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              onChange={() => this.props.markCompleteTodo(todo.id)}\r\n              checked={todo.completed ? true : false}\r\n            />{' '}\r\n            <span\r\n              className='ml-3'\r\n              style={this.getTextDecoration(todo.completed)}\r\n            >\r\n              {todo.title}\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div className='col-2'>\r\n          <button\r\n            style={btnStyle}\r\n            onClick={() => this.props.deleteTodo(todo.id)}\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todos: state.todos.todos,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  markCompleteTodo,\r\n  deleteTodo,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(TodoItem);\r\n\r\nconst btnStyle = {\r\n  background: '#ff0000',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '5px 10px',\r\n  borderRadius: '50%',\r\n  cursor: 'pointer',\r\n  outline: 'none',\r\n};\r\n","import * as actionTypes from './todos-actionType';\r\n\r\nexport const addTodo = (todo) => {\r\n  return {\r\n    type: actionTypes.addTodo,\r\n    payload: todo,\r\n  };\r\n};\r\n\r\nexport const markCompleteTodo = (id) => {\r\n  return {\r\n    type: actionTypes.markCompleteTodo,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (id) => {\r\n  return {\r\n    type: actionTypes.deleteTodo,\r\n    payload: id,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoItem from './TodoItem/TodoItem';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { addTodo } from '../../store/todos/todos-action';\r\n\r\nclass Todos extends React.Component {\r\n  state = {\r\n    title: '',\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newTodo = {\r\n      id: uuidv4(),\r\n      title: this.state.title,\r\n      completed: false,\r\n    };\r\n    this.props.addTodo(newTodo);\r\n    this.setState({ title: '' });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className='py-5 text-center'>\r\n          <h2>To-Do List</h2>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-12'>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className='row'>\r\n                <div className='col-10 form-group mb-2'>\r\n                  <input\r\n                    type='text'\r\n                    name='title'\r\n                    placeholder='Add Todo...'\r\n                    value={this.state.title}\r\n                    onChange={this.onChange}\r\n                    className='form-control'\r\n                  />\r\n                </div>\r\n\r\n                <div className='col-2'>\r\n                  <button type='submit' className='btn btn-primary mb-2'>\r\n                    Add Todo\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row mt-4'>\r\n          <div className='col-12'>\r\n            <TodoItem />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo,\r\n};\r\n\r\nconst connector = connect(null, mapDispatchToProps);\r\n\r\nexport default connector(Todos);\r\n","import { Route, Switch } from 'react-router-dom';\nimport Header from 'components/Header/Header';\nimport AddDetail from 'components/ContactProject/AddDetail/AddDetail';\nimport BookingDetail from 'components/Formik/BookingDetail/BookingDetail';\nimport Todos from 'components/Todo/Todos';\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Header />\n      <Switch>\n        <Route path='/assignment-2' component={BookingDetail} />\n        <Route path='/assignment-1' component={AddDetail} />\n        <Route path='/todo-list' component={Todos} />\n        <Route path='/' component={Home} />\n      </Switch>\n    </div>\n  );\n}\n\nconst Home = () => {\n  return (\n    <div className='py-5 text-center'>\n      <h2>Training Assignments</h2>\n    </div>\n  );\n};\n\nexport default App;\n","import * as actionTypes from './todos-actionType';\r\n\r\nconst initialState = {\r\n  todos: [],\r\n};\r\n\r\nconst todosReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.addTodo:\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.payload],\r\n      };\r\n\r\n    case actionTypes.deleteTodo:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todo) => todo.id !== action.payload),\r\n      };\r\n\r\n    case actionTypes.markCompleteTodo:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo) => {\r\n          if (todo.id === action.payload) {\r\n            todo.completed = !todo.completed;\r\n          }\r\n          return todo;\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport default todosReducer;\r\n","import { combineReducers } from 'redux';\r\nimport todosReducer from './todos/todos-reducers';\r\n\r\nconst appReducer = combineReducers({\r\n  todos: todosReducer,\r\n});\r\n\r\nexport default appReducer;\r\n","import { createStore, compose } from 'redux';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst composeEnhancer =\r\n  (process.env.NODE_ENV !== 'production' &&\r\n    typeof window !== 'undefined' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancer());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}